{
  "view": {
    "profile": {
      "log_time.php": "<?php\r\nsession_start(); // Inicia la sesión para acceder a las variables de sesión\r\n\r\ndate_default_timezone_set('America/El_Salvador');\r\n\r\n$tipoAccion = isset($_GET['tipoAccion']) ? $_GET['tipoAccion'] : '';\r\n$action = isset($_GET['action']) ? $_GET['action'] : '';\r\n$time = isset($_GET['time']) ? $_GET['time'] : '';\r\n$pausasDiarias = isset($_GET['dailyPauses']) ? $_GET['dailyPauses'] : 0;\r\n\r\n$entradaLog = '';\r\n$employeeId = isset($_SESSION['id']) ? $_SESSION['id'] : null; // Obtén el ID del empleado desde la sesión\r\n\r\nfunction calculateTimeDifference($tiempoInicio, $tiempoFinal, $minutoFormato = false) {\r\n    if ($minutoFormato) {\r\n        $inicio = DateTime::createFromFormat('i:s', $tiempoInicio);\r\n        $final = DateTime::createFromFormat('i:s', $tiempoFinal);\r\n    } else {\r\n        $inicio = DateTime::createFromFormat('H:i:s', $tiempoInicio);\r\n        $final = DateTime::createFromFormat('H:i:s', $tiempoFinal);\r\n    }\r\n\r\n    if (!$inicio || !$final) {\r\n        return 'Invalid time format';\r\n    }\r\n\r\n    $intervalo = $inicio->diff($final);\r\n    return $intervalo->format('%H:%I:%S');\r\n}\r\n\r\nswitch ($tipoAccion) {\r\n    case 'Entrada':\r\n        $tiempoRegistrado = date('H:i:s');\r\n        $entradaLog = \"Entrada: $tiempoRegistrado\";\r\n    \r\n        // Función para generar un token de 9 dígitos\r\n        function generateToken() {\r\n            $prefix = \"FEH\";\r\n            $randomDigits = '';\r\n            for ($i = 0; $i < 6; $i++) {\r\n                $randomDigits .= mt_rand(0, 9);\r\n            }\r\n            return $prefix . $randomDigits;\r\n        }\r\n    \r\n        // Generar el token y guardarlo en una variable de sesión\r\n        $token = generateToken();\r\n        $_SESSION['token'] = $token;\r\n    \r\n        // Insertar en la API si es entrada\r\n        if ($employeeId) {\r\n            // Guardar el time_entry en una variable de sesión\r\n            $_SESSION['time_entry'] = $tiempoRegistrado;\r\n    \r\n            $data = [\r\n                'employee_id' => $employeeId,\r\n                'date' => date('Y-m-d'),\r\n                'time_entry' => $tiempoRegistrado,\r\n                'token' => $token \r\n            ];\r\n    \r\n            $ch = curl_init('http://127.0.0.1:8000/api/assistence');\r\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n            curl_setopt($ch, CURLOPT_POST, true);\r\n            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));\r\n            curl_setopt($ch, CURLOPT_HTTPHEADER, [\r\n                'Content-Type: application/json',\r\n                'Accept: application/json'\r\n            ]);\r\n    \r\n            $response = curl_exec($ch);\r\n            curl_close($ch);\r\n    \r\n            if ($response === false) {\r\n                $entradaLog .= \" - Error al registrar la asistencia.\";\r\n            }\r\n        } else {\r\n            $entradaLog .= \" - ID de empleado no encontrado.\";\r\n        }\r\n        break;\r\n    \r\n    \r\n    case 'Salida':\r\n        $tiempoRegistrado = date('H:i:s');\r\n        $entradaLog = \"Salida: $tiempoRegistrado\";\r\n\r\n        // Actualizar en la API si es salida\r\n        if ($employeeId) {\r\n            $fechaSistema = date('Y-m-d');\r\n            $url = \"http://127.0.0.1:8000/api/assistence/$employeeId/$fechaSistema\";\r\n\r\n            // Obtener el registro existente\r\n            $ch = curl_init($url);\r\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n            curl_setopt($ch, CURLOPT_HTTPHEADER, [\r\n                'Content-Type: application/json',\r\n                'Accept: application/json'\r\n            ]);\r\n\r\n            $response = curl_exec($ch);\r\n            $existingRecord = json_decode($response, true);\r\n            curl_close($ch);\r\n\r\n            if ($existingRecord && is_array($existingRecord)) {\r\n                // Utilizar el time_entry de la sesión si existe, de lo contrario, mantener el existente\r\n                $existingRecord['time_entry'] = isset($_SESSION['time_entry']) ? $_SESSION['time_entry'] : $existingRecord['time_entry'];\r\n\r\n                // Guardar el time_exit en una variable de sesión\r\n                $_SESSION['time_exit'] = $tiempoRegistrado;\r\n                $existingRecord['time_exit'] = $tiempoRegistrado;\r\n\r\n                $ch = curl_init($url);\r\n                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n                curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\r\n                curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($existingRecord));\r\n                curl_setopt($ch, CURLOPT_HTTPHEADER, [\r\n                    'Content-Type: application/json',\r\n                    'Accept: application/json'\r\n                ]);\r\n\r\n                $response = curl_exec($ch);\r\n                curl_close($ch);\r\n\r\n                if ($response === false) {\r\n                    $entradaLog .= \" - Error al actualizar la salida.\";\r\n                }\r\n            } else {\r\n                $entradaLog .= \" - Error al obtener el registro de asistencia.\";\r\n            }\r\n        } else {\r\n            $entradaLog .= \" - ID de empleado no encontrado.\";\r\n        }\r\n        break;\r\n\r\n    case 'Timer1':\r\n        $tiempoInicial = '06:40:00';\r\n        $tiempoDiferencia = calculateTimeDifference($tiempoInicial, $time);\r\n        $entradaLog = \"Horas de trabajo cumplidas: $tiempoDiferencia  Tiempo a reponer: $time\";\r\n\r\n        // Guardar work_completed y time_to_recover en variables de sesión\r\n        $_SESSION['work_completed'] = $tiempoDiferencia;\r\n        $_SESSION['time_to_recover'] = $time;\r\n\r\n        \r\n        break;\r\n\r\n    case 'Timer2':\r\n        $tiempoInicial = '20:00';\r\n        $tiempoDiferencia = calculateTimeDifference($tiempoInicial, $time, true);\r\n        $entradaLog = \"Receso cumplido: $tiempoDiferencia  Tiempo adicional $time\";\r\n\r\n        // Guardar break_completed y additional_time en variables de sesión\r\n        $_SESSION['break_completed'] = $tiempoDiferencia;\r\n        $_SESSION['additional_time'] = $time;\r\n\r\n        break;\r\n\r\n    case 'LunchTimer':\r\n        $tiempoInicial = '60:00';\r\n        $tiempoDiferencia = calculateTimeDifference($tiempoInicial, $time, true);   \r\n        $entradaLog = \"Tiempo de almuerzo realizado: $tiempoDiferencia \";\r\n\r\n        // Guardar lunch_time en una variable de sesión\r\n        $_SESSION['lunch_time'] = $tiempoDiferencia;\r\n\r\n        break;\r\n\r\n    case 'tiempoFinalizacion':\r\n        $entradaLog = \"Pausas diarias: $pausasDiarias\";\r\n\r\n        // Guardar daily_pauses en una variable de sesión\r\n        $_SESSION['daily_breaks'] = $pausasDiarias;\r\n\r\n        // Actualizar en la API al finalizar\r\n        if ($employeeId) {\r\n            $fechaSistema = date('Y-m-d');\r\n            $url = \"http://127.0.0.1:8000/api/assistence/$employeeId/$fechaSistema\";\r\n\r\n            // Obtener el registro existente\r\n            $ch = curl_init($url);\r\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n            curl_setopt($ch, CURLOPT_HTTPHEADER, [\r\n                'Content-Type: application/json',\r\n                'Accept: application/json'\r\n            ]);\r\n\r\n            $response = curl_exec($ch);\r\n            $existingRecord = json_decode($response, true);\r\n            curl_close($ch);\r\n\r\n            if ($existingRecord && is_array($existingRecord)) {\r\n                // Mantener los datos de time_entry y time_exit sin cambios\r\n                $existingRecord['time_entry'] = isset($_SESSION['time_entry']) ? $_SESSION['time_entry'] : $existingRecord['time_entry'];\r\n                $existingRecord['time_exit'] = isset($_SESSION['time_exit']) ? $_SESSION['time_exit'] : $existingRecord['time_exit'];\r\n\r\n\r\n                // Actualizar solo los campos de work_completed, time_to_recover, etc.\r\n                $existingRecord['work_completed'] = $_SESSION['work_completed'];\r\n                $existingRecord['time_to_recover'] = $_SESSION['time_to_recover'];\r\n                $existingRecord['break_completed'] = $_SESSION['break_completed'];\r\n                $existingRecord['additional_time'] = $_SESSION['additional_time'];  \r\n                $existingRecord['dealy_breaks'] = $_SESSION['daily_breaks'];\r\n                $existingRecord['lunch_time'] = $_SESSION['lunch_time'];\r\n                $existingRecord['justificacion'] = $_SESSION['justificacion'];\r\n                $existingRecord['token'] = $_SESSION['token'];\r\n\r\n                $ch = curl_init($url);\r\n                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n                curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\r\n                curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($existingRecord));\r\n                curl_setopt($ch, CURLOPT_HTTPHEADER, [\r\n                    'Content-Type: application/json',\r\n                    'Accept: application/json'\r\n                ]);\r\n\r\n                $response = curl_exec($ch);\r\n                curl_close($ch);\r\n\r\n                if ($response === false) {\r\n                    $entradaLog .= \" - Error al actualizar los datos al finalizar.\";\r\n                }\r\n            } else {\r\n                $entradaLog .= \" - Error al obtener el registro de asistencia.\";\r\n            }\r\n        } else {\r\n            $entradaLog .= \" - ID de empleado no encontrado.\";\r\n        }\r\n        break;\r\n\r\n    default:\r\n        $entradaLog = \"Acción no reconocida\";\r\n}\r\n\r\necho $entradaLog;\r\n\r\n\r\n\r\n// Nueva función para actualizar remaining_lunch_hour\r\nfunction actualizarJustificacion() {\r\n    global $employeeId;\r\n\r\n    if ($employeeId) {\r\n        $justificacion = isset($_POST['justificacion']) ? $_POST['justificacion'] : '';\r\n\r\n        if (!empty($justificacion)) {\r\n            // Guardar la justificación en una variable de sesión\r\n            $_SESSION['justificacion'] = $justificacion;\r\n\r\n            echo \"Justificación almacenada en la sesión.\";\r\n        } else {\r\n            echo \"Justificación vacía.\";\r\n        }\r\n    } else {\r\n        echo \"ID de empleado no encontrado.\";\r\n    }\r\n}\r\n\r\n// Verificar si se ha enviado la solicitud para actualizar justificación\r\nif (isset($_POST['actualizarJustificacion'])) {\r\n    actualizarJustificacion();\r\n}\r\n\r\n\r\n\r\nfunction generarYDescargarPDF() {\r\n    global $employeeId;\r\n\r\n    // Verifica que todas las variables de sesión estén definidas\r\n    if (isset($_SESSION['time_entry'], $_SESSION['time_exit'], $_SESSION['work_completed'], $_SESSION['time_to_recover'], $_SESSION['break_completed'], $_SESSION['additional_time'], $_SESSION['daily_breaks'], $_SESSION['lunch_time'], $_SESSION['justificacion'], $_SESSION['token'])) {\r\n        \r\n        // Contenido del PDF\r\n        $content = \"\r\n            <h1>Detalles del Registro</h1>\r\n            <p><strong>ID de Empleado:</strong> $employeeId</p>\r\n            <p><strong>Fecha:</strong> \" . date('Y-m-d') . \"</p>\r\n            <p><strong>Hora de Entrada:</strong> \" . $_SESSION['time_entry'] . \"</p>\r\n            <p><strong>Hora de Salida:</strong> \" . $_SESSION['time_exit'] . \"</p>\r\n            <p><strong>Trabajo Completado:</strong> \" . $_SESSION['work_completed'] . \"</p>\r\n            <p><strong>Tiempo a Recuperar:</strong> \" . $_SESSION['time_to_recover'] . \"</p>\r\n            <p><strong>Receso Completado:</strong> \" . $_SESSION['break_completed'] . \"</p>\r\n            <p><strong>Tiempo Adicional:</strong> \" . $_SESSION['additional_time'] . \"</p>\r\n            <p><strong>Pausas Diarias:</strong> \" . $_SESSION['daily_breaks'] . \"</p>\r\n            <p><strong>Tiempo de Almuerzo:</strong> \" . $_SESSION['lunch_time'] . \"</p>\r\n            <p><strong>Justificación:</strong> \" . $_SESSION['justificacion'] . \"</p>\r\n            <p><strong>Token:</strong> \" . $_SESSION['token'] . \"</p>\r\n        \";\r\n\r\n        // Usa una librería como FPDF o TCPDF para generar el PDF\r\n        require_once('path/to/tcpdf/tcpdf.php'); // Cambia 'path/to/tcpdf/' por la ruta correcta\r\n\r\n        $pdf = new TCPDF();\r\n        $pdf->AddPage();\r\n        $pdf->writeHTML($content, true, false, true, false, '');\r\n        $pdf->Output('registro.pdf', 'D'); // El PDF se descargará automáticamente\r\n    } else {\r\n        echo \"No se encontraron todos los datos necesarios en la sesión.\";\r\n    }\r\n}\r\n\r\n// Verificar si se ha solicitado la descarga del PDF\r\nif (isset($_POST['descargarPDF'])) {\r\n    generarYDescargarPDF();\r\n}\r\n?>\r\n"
    }
  }
}